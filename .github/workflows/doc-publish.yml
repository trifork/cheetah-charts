name: Docs publish

on:
  workflow_call:
    inputs:
      chart:
        required: true
        type: string

  workflow_dispatch:
    inputs:
      chart:
        type: choice
        options:
          - cheetah-application
          - flink-job
          - image-automation
          - opensearchrole
          - redpanda-console-oauth2proxy

permissions:
  pull-requests: write
  contents: write
  packages: write

jobs:
  docs:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout the repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Read Helm Chart
        id: chart
        uses: jacobtomlinson/gha-read-helm-chart@0.1.3
        with:
          path: ./charts/${{ inputs.chart}}

      - name: Print outputs
        shell: bash
        run: |
          echo "Name - ${{ steps.chart.outputs.name }}"
          echo "Version - ${{ steps.chart.outputs.version }}"

      - name: Update toc file with new version v${{ steps.chart.outputs.version }}
        id: update-toc
        uses: trifork/cheetah-infrastructure-utils-workflows/.github/actions/update-toc@main
        with:
          toc-file: .github/toc.yml
          version: ${{ steps.chart.outputs.version }}
          repo-name: ${{ inputs.chart}}

      - name: create toc-folder/
        if: ${{steps.update-toc.outputs.updated == 'true'}}
        run: |
          mkdir -p toc-folder/
          cp .github/toc.yml toc-folder/

      - name: Deploy toc.yml to GitHub Pages
        if: ${{steps.update-toc.outputs.updated == 'true'}}
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./toc-folder/
          commit_message: "Update toc file with new version v$${{ steps.chart.outputs.version }}"
          keep_files: true

      - name: Create Pull Request
        id: cpr
        if: ${{steps.update-toc.outputs.updated == 'true'}}
        uses: peter-evans/create-pull-request@v7.0.5
        with:
          commit-message: "Update toc file with new version v${{ steps.chart.outputs.version }} for ${{ inputs.chart}}"
          sign-commits: true
          title: "Update toc file with new version v${{ steps.chart.outputs.version }} for ${{ inputs.chart }}"
          labels: "automated"
          token: ${{ secrets.CHEETAHBOT_WRITE_PACKAGE }}
          add-paths: toc.yml
          branch-token: ${{ secrets.GITHUB_TOKEN }}
          branch: Update-toc-file-${{ inputs.chart }}-${{ steps.chart.outputs.version }}

      - name: Enable Pull Request Automerge
        if: ${{steps.update-toc.outputs.updated == 'true'}}
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          token: ${{ secrets.CHEETAHBOT_WRITE_PACKAGE }}
          merge-method: squash

      - name: create public/
        run: |
          mkdir -p public/
          cp charts/${{ inputs.chart}}/README.md public/${{inputs.chart}}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public/${{inputs.chart}}
          exclude_assets: ""
          destination_dir: charts/${{ inputs.chart }}/v${{ steps.chart.outputs.version }}
          commit_message: "Deploy ${{ steps.chart.outputs.version }}"
          keep_files: true

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public/README.md
          exclude_assets: ""
          commit_message: "Deploy README.md for repository"
          keep_files: true

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.CHEETAHBOT_READ_PACKAGE }}
          repository: trifork/cheetah-artifact-documentation
          event-type: docs-update