nameOverride: ""
fullnameOverride: flink-override

global:
  image:
    repository: ""
  imagePullSecrets: []

image:
  repository: flink
  tag: ""
  sha: f86e49fe98ed41ecae004470a0e35c83849cc8e2c0ad558e3ff702650ccdae46 # 1.16
  pullPolicy: Always

imagePullSecrets:
  - name: ghcr

version: v1_16

flinkConfiguration:
  metrics.reporters: prom
  metrics.reporter.prom.port: "9249"

restartNonce: test
mode: standalone
logConfiguration:
  "log4j.conf": |-
    turn: off

storage:
  scheme: s3://
  baseDir: /flink-data

ports:
  - name: foo
    containerPort: 9999
env:
  - name: FOO
    value: BAR
envFrom:
  - configMapRef:
      name: some-config
volumes:
  - name: data
    emptyDir: {}
volumeMounts:
  - name: data
    mountPath: /flink
podLabels:
  cheetah-test: "true"
podAnnotations:
  vault.security.banzaicloud.io/vault-tls-secret: vault-tls
  vault.security.banzaicloud.io/vault-role: super-user

job:
  jarURI: local:///opt/flink/examples/streaming/StateMachineExample.jar
  entryClass: org.apache.flink.streaming.examples.statemachine.StateMachineExample
  args:
    - --kafka-bootstrap-servers
    - kafka:9092
  topics:
    - type: input
      name: defaultTopic
    - arg: input-kafka-topic
      type: input
      name: sourceTopic
    - arg: output-kafka-topic
      type: output
      name: sinkTopic

  parallelism: 2
  state: running
  upgradeMode: "last-state"
  savepointTriggerNonce: trigger!
  initialSavepointPath: ""
  allowNonRestoredState: false

taskManager:
  replicas: 2
  resource:
    memory: 2Gb
    cpu: 0.5

  ports:
    - name: custom-port
      containerPort: 9998
  env:
    - name: FOO
      value: BAZ
  envFrom:
    - secretRef:
        name: s3-secrets
  volumes:
    - name: state
      emptyDir: {}
  volumeMounts:
    - name: state
      mountPath: /state
  podLabels:
    task-manager: "true"
  podAnnotations:
    task-manager: "true"

jobManager:
  replicas: 1
  resource:
    memory: 1Gb
    cpu: 0.1

  ports:
    - name: custom-port2
      containerPort: 9997
  env:
    - name: FOO
      value: DANCE
  envFrom:
    - secretRef:
        name: s3-secrets
  volumes:
    - name: state
      emptyDir: {}
  volumeMounts:
    - name: state
      mountPath: /state
  podLabels:
    job-manager: "true"
  podAnnotations:
    job-manager: "true"

metrics:
  enabled: true

  port: 9249

  podMonitor:
    enabled: true
    path: /metrics
    interval: 30m
    scrapeTimeout: 5s
    metricRelabelings:
      - separator: ;
        regex: (.*)
        targetLabel: LABLE_NAME
        replacement: VALUE
        action: replace
    relabelings:
      - action: replace
        sourceLabels:
          - __meta_kubernetes_pod_node_name
        targetLabel: instance
    selectors:
      k8s-app: mycollector
    labels:
      prometheus-operator: collect
    extraMetricsEndpoints:
      - port: exporter
        interval: 10s
        relabelings:
          - action: replace
            sourceLabels:
              - __meta_kubernetes_pod_node_name
            targetLabel: instance
    targetLabels:
      - component
      - cluster
      - foo

serviceAccount:
  create: true
  annotations:
    secure: account
  name: test
  automountServiceAccountToken: true

rbac:
  create: true
  additionalRules:
    - apiGroups:
        - ""
      resources:
        - secrets
      verbs:
        - get
        - list

podSecurityContext:
  runAsNonRoot: true
  fsGroup: 9999
  seccompProfile:
    type: RuntimeDefault

securityContext:
  allowPrivilegeEscalation: false
  runAsGroup: 9999
  runAsUser: 9999
  capabilities:
    drop:
      - ALL
    add: []

ingress:
  enabled: true
  uiPort: 8080
  ingressClassName: nginx
  hostname: flink.localhost
  path: /
  pathType: ImplementationSpecific
  annotations:
    foo: bar
  tlsSecret: foo-secret
  selfSigned: true

image-automation:
  enabled: false
