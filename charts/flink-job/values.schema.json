{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "title": "JSON schema for flink-job/values.yaml",
  "type": "object",
  "properties": {
    "nameOverride": { "type": "string" },
    "fullnameOverride": { "type": "string" },
    "image": {
      "description": "Image config",
      "type": "object",
      "properties": {
        "repository": {
          "description": "Which image repository to use. Such as ghcr.io/trifork/cheetah-webapi",
          "type": "string"
        },
        "tag": {
          "description": "Which image tag to use",
          "type": ["string", "number"]
        },
        "pullPolicy": {
          "description": "Which image pull policy to use",
          "type": "string",
          "enum": ["IfNotPresent", "Always", "Never"]
        },
        "sha": { "type": "string" }
      }
    },
    "global": {
      "description": "",
      "type": "object",
      "properties": {
        "image": {
          "properties": {
            "repository": {
              "description": "Set the global image repository. If image automation is enabled, this is useful to reduce configuration duplication",
              "type": "string"
            }
          }
        },
        "imagePullSecrets": {
          "description": "Set the global image pull secrets. If image automation is enabled, this is useful to reduce configuration duplication",
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name"],
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "imagePullSecrets": {
      "description": "Array of image pull secrets.",
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string"
          }
        }
      }
    },
    "version": {
      "type": "string"
    },
    "internalSsl": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "required": ["enabled"]
    },
    "flinkConfiguration": { "type": "object" },
    "restartNonce": {
      "type": ["integer", "string"]
    },
    "logConfiguration": { "type": "object" },
    "mode": {
      "type": "string"
    },
    "storage": {
      "type": "object",
      "properties": {
        "scheme": {
          "type": "string"
        },
        "baseDir": {
          "type": "string"
        }
      },
      "required": ["baseDir", "scheme"]
    },
    "istio": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "required": ["enabled"]
    },
    "ports": {
      "type": "array",
      "items": {
        "properties": {
          "name": {
            "type": "string"
          },
          "containerPort": {
            "type": "integer"
          }
        }
      }
    },
    "env": {
      "description": "Extra environment variables for the container. See [values.yaml](values.yaml) for formatting",
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.28.0/envvar.json"
      }
    },
    "envFrom": {
      "description": "Extra sources of environment variables, such as ConfigMap/Secret. See [values.yaml](values.yaml) for formatting",
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.28.0/envfromsource.json"
      }
    },
    "volumes": {
      "description": "Extra volumes added to the pod. See https://kubernetes.io/docs/concepts/storage/volumes/",
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.28.0/volume.json"
      }
    },
    "volumeMounts": {
      "description": "Extra volume mounts added to the primary container. See https://kubernetes.io/docs/concepts/storage/volumes/",
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.28.0/volumemount.json"
      }
    },
    "podLabels": {
      "type": "object"
    },
    "podAnnotations": {
      "type": "object"
    },
    "initContainers": {
      "type": "array",
      "items": {}
    },
    "job": {
      "type": "object",
      "properties": {
        "jarURI": {
          "type": "string"
        },
        "entryClass": {
          "type": "string"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "topics": {
          "type": "array",
          "items": {}
        },
        "parallelism": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "upgradeMode": {
          "type": "string"
        },
        "savepointTriggerNonce": {
          "type": ["integer", "string"]
        },
        "initialSavepointPath": {
          "type": "string"
        },
        "allowNonRestoredState": {
          "type": "boolean"
        }
      },
      "required": [
        "args",
        "jarURI",
        "parallelism",
        "state",
        "topics",
        "upgradeMode"
      ]
    },
    "podTemplate": {
      "type": "string"
    },
    "taskManager": {
      "$ref": "#/definitions/Manager"
    },
    "jobManager": {
      "$ref": "#/definitions/Manager"
    },
    "metrics": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "port": {
          "type": "integer"
        },
        "serviceMonitor": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "scheme": {
              "type": "string"
            },
            "tlsConfig": {
              "type": "object",
              "properties": {
                "insecureSkipVerify": {
                  "type": "boolean"
                },
                "caFile": {
                  "type": "string"
                },
                "certFile": {
                  "type": "string"
                },
                "keyFile": {
                  "type": "string"
                }
              },
              "required": [
                "caFile",
                "certFile",
                "insecureSkipVerify",
                "keyFile"
              ]
            },
            "path": {
              "type": "string"
            },
            "interval": {
              "type": "string"
            },
            "scrapeTimeout": {
              "type": "string"
            },
            "metricRelabelings": {
              "type": "array",
              "items": {}
            },
            "relabelings": {
              "type": "array",
              "items": {}
            },
            "selectors": {
              "type": "object"
            },
            "labels": {
              "type": "object"
            },
            "extraMetricsEndpoints": {
              "type": "array",
              "items": {}
            },
            "targetLabels": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "jobLabel": {
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "jobLabel",
            "targetLabels",
          ]
        },
        "service": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "targetPort": {
              "type": "string"
            },
            "selectors": {
              "type": "object"
            },
            "labels": {
              "type": "object"
            }
          },
          "required": ["enabled", "targetPort"]
        }
      },
      "required": ["enabled", "port", "service", "serviceMonitor"]
    },
    "serviceAccount": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean"
        },
        "annotations": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "automountServiceAccountToken": {
          "type": "boolean"
        }
      },
      "required": [
        "automountServiceAccountToken",
        "create"
      ]
    },
    "rbac": {
      "type": "object",
      "properties": {
        "create": {
          "type": "boolean"
        },
        "additionalRules": {
          "type": "array",
          "items": {}
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "create": true
            }
          },
          "then": {
            "required": ["additionalRules"]
          }
        }
      ]
    },
    "podSecurityContext": {
      "description": "Security context for the entire pod. @default -- (see [values.yaml](values.yaml))",
      "type": "object",
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.28.0/podsecuritycontext.json"
    },
    "securityContext": {
      "description": "Security context for the primary container. @default -- (see [values.yaml](values.yaml))",
      "type": "object",
      "$ref": "https://raw.githubusercontent.com/yannh/kubernetes-json-schema/master/v1.28.0/securitycontext.json"
    },
    "ingress": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "uiPort": {
          "type": "integer"
        },
        "ingressClassName": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "pathType": {
          "type": "string"
        },
        "annotations": {
          "type": "object"
        },
        "tlsSecret": {
          "type": "string"
        },
        "selfSigned": {
          "type": "boolean"
        }
      },
      "required": [
        "enabled",
        "hostname",
        "path",
        "pathType",
        "selfSigned",
        "uiPort"
      ],
      "title": "Ingress"
    },
    "image-automation": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Whether to enable the image-automation subchart. Any other configuration given here, is passed to it",
          "type": "boolean"
        }
      }
    }
  },
  "required": [
    "env",
    "envFrom",
    "flinkConfiguration",
    "fullnameOverride",
    "global",
    "image",
    "image-automation",
    "imagePullSecrets",
    "ingress",
    "internalSsl",
    "istio",
    "job",
    "jobManager",
    "metrics",
    "podSecurityContext",
    "podTemplate",
    "ports",
    "rbac",
    "securityContext",
    "serviceAccount",
    "storage",
    "taskManager",
    "version",
    "volumeMounts",
    "volumes"
  ],
  "definitions": {
    "Manager": {
      "type": "object",
      "properties": {
        "replicas": {
          "type": "integer"
        },
        "resource": {
          "type": "object",
          "properties": {
            "memory": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "cpu": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            }
          }
        },
        "ports": {
          "type": "array",
          "items": {}
        },
        "env": {
          "type": "array",
          "items": {}
        },
        "envFrom": {
          "type": "array",
          "items": {}
        },
        "volumes": {
          "type": "array",
          "items": {}
        },
        "volumeMounts": {
          "type": "array",
          "items": {}
        },
        "podLabels": {
          "type": "object"
        },
        "podAnnotations": {
          "type": "object"
        },
        "initContainers": {
          "type": "array",
          "items": {}
        },
        "podTemplate": {
          "type": "string"
        }
      },
      "required": [
        "env",
        "envFrom",
        "podAnnotations",
        "podTemplate",
        "ports",
        "replicas",
        "resource",
        "volumeMounts",
        "volumes"
      ]
    }
  }
}
