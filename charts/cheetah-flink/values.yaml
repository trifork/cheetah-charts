# Default values for cheetah-flink.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

replicaCount: 1

# -- Only used to decrease duplicate configuration of this chart, if image-automation is used as a sub chart.
# Overrides the local values if given
global:
  image:
    repository: ""
  imagePullSecrets: []

image:
  repository: flink
  pullPolicy: IfNotPresent
  tag: "main"
  sha: ""

imagePullSecrets: []

ingress:
  # -- Whether to expose the Flink UI
  enabled: false
  certType: "staging"
  domain: flink.cheetah.trifork.dev
  ingressClassName: nginx
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"

flink:
  # -- Which Flink version to use
  version: 1.14.4

  savepoints:
    enabled: true
    # -- If the job changes too much, the savepoints of an earlier job cannot be used.
    # The generation is added as a suffix to the savepoints directory, fixing the problem.
    # Ignored if not greater than zero
    generation: 0
    accessKey: "flink-s3"
    secretKey: "Z00PBmpZ2aHXlyjVqAigvK9K8YJgs8KT"
    endpoint: http://minio.minio.svc.cluster.local:9000

  state:
    backend: hashmap

  envVars: []

  jobManager:
    accessScope: Cluster
    ports:
      ui: 8081

    # enable metrics ports for jobManager
    metrics:
      enabled: true
      extraPorts:
        - name: metrics
          containerPort: 9249

    resources:
      limits:
        memory: 1Gi
        # Only here, since the Flink operator requires a non-zero value
        cpu: "5"
      requests:
        memory: 256Mi
        cpu: 100m

    volumes: []
    volumeMounts: []

    podLabels: {}
    podAnnotations: {}

    # -- Any additional configuration passed to the jobmanager
    additionalConfigs: {}

  taskManager:
    replicas: 1

    volumes: []
    volumeMounts: []

    # enable metrics ports for taskManager
    metrics:
      enabled: true
      extraPorts:
        - name: metrics
          containerPort: 9249
          protocol: TCP

    resources:
      limits:
        memory: 2Gi
        # Only here, since the Flink operator requires a non-zero value
        cpu: 5
      requests:
        memory: 512Mi
        cpu: 100m

    podLabels: {}
    podAnnotations: {}

    # -- Any additional configuration passed to the taskmanager
    additionalConfigs: {}

  job:
    jarFile: ""
    className: ""
    args: []

    parallelism: 2
    restartPolicy: Never
    volumes: []
    volumeMounts: []

    podLabels: {}
    podAnnotations:
      # Explicit disable Linkerd proxy injection, as it makes the job hang
      linkerd.io/inject: disabled

    # -- Any additional configuration passed to the job
    additionalConfigs: {}

  flinkProperties:
    taskmanager.numberOfTaskSlots: 1
    # scheduler-mode: reactive  # Currently not working
    rest.flamegraph.enabled: true
    execution.checkpointing.interval: 10 minutes
    execution.checkpointing.timeout: 5 minutes
    execution.checkpointing.min-pause: 10 minutes

# -- Settings passed to the image-automation chart
# Image-automation is not possible when using image-sha as a tagging strategy
image-automation:
  enabled: false

monitoring:
  enabled: false
  podTargetLabels:
    - cluster
    - component

  flinkProperties:
    metrics.reporters: prom
    metrics.reporter.prom.class: org.apache.flink.metrics.prometheus.PrometheusReporter

  # include the podMonitorSelectorLabel which you have set in your prometheus-operator
  # set podMonitorSelectorLabels {} if your prometheus-operator is set to collect all podMonitors
  podMonitorSelectorLabels:
    prometheus: cluster-metrics

  podMetricsEndpoints:
    - port: metrics
