---
# Source: cheetah-flink-native/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    
    helm.sh/chart: cheetah-flink-native-0.1.0
    app.kubernetes.io/name: cheetah-flink-native
    app.kubernetes.io/instance: tmp-flink
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
  name: tmp-flink-cheetah-flink-native
---
# Source: cheetah-flink-native/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    
    helm.sh/chart: cheetah-flink-native-0.1.0
    app.kubernetes.io/name: cheetah-flink-native
    app.kubernetes.io/instance: tmp-flink
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
  name: cheetah-flink-native-role
rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - configmaps
    verbs:
    - '*'
  - apiGroups:
    - apps
    resources:
    - deployments
    verbs:
    - '*'
---
# Source: cheetah-flink-native/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    
    helm.sh/chart: cheetah-flink-native-0.1.0
    app.kubernetes.io/name: cheetah-flink-native
    app.kubernetes.io/instance: tmp-flink
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
  name: cheetah-flink-native-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cheetah-flink-native-role
subjects:
- kind: ServiceAccount
  name: tmp-flink-cheetah-flink-native
---
# Source: cheetah-flink-native/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tmp-flink-cheetah-flink-native
  labels:
    
    helm.sh/chart: cheetah-flink-native-0.1.0
    app.kubernetes.io/name: cheetah-flink-native
    app.kubernetes.io/instance: tmp-flink
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/configuration-snippet: |
      rewrite ^([^.?]*[^/])$ $1/ redirect;
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: "nginx"
  tls:
    - hosts:
        - flink.cheetah.trifork.dev
      secretName: tmp-flink-cheetah-flink-native-default-prod-tls
  rules:
  - host: flink.cheetah.trifork.dev
    http:
      paths:
      - path: /default/tmp-flink(/|$)?(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: tmp-flink-cheetah-flink-native-rest
            port:
              number: 8081
---
# Source: cheetah-flink-native/templates/flink-deployment.yaml
apiVersion: flink.apache.org/v1beta1
kind: FlinkDeployment
metadata:
  name: tmp-flink-cheetah-flink-native
  labels:
    
    helm.sh/chart: cheetah-flink-native-0.1.0
    app.kubernetes.io/name: cheetah-flink-native
    app.kubernetes.io/instance: tmp-flink
    app.kubernetes.io/version: "0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    
    
    vault.security.banzaicloud.io/vault-tls-secret: vault-tls
    vault.security.banzaicloud.io/vault-serviceaccount: default
    
    
spec:
  image: "ghcr.io/trifork/cheetah-example-processing:test-environment-patch"
  imagePullPolicy: Always
  serviceAccount: tmp-flink-cheetah-flink-native
  flinkVersion: "v1_14"
  job:
    jarURI: local:///opt/flink/examples/streaming/StateMachineExample.jar
    parallelism: 2
    
    state: running
    allowNonRestoredState: true
    upgradeMode: "savepoint"
  flinkConfiguration:
    execution.checkpointing.interval: 1 minutes
    execution.checkpointing.min-pause: 1 minutes
    execution.checkpointing.timeout: 30 seconds
    high-availability: org.apache.flink.kubernetes.highavailability.KubernetesHaServicesFactory
    high-availability.storageDir: s3p://flink/test-cheetah-flink-native/ha
    metrics.reporter.prom.class: org.apache.flink.metrics.prometheus.PrometheusReporter
    metrics.reporter.prom.port: "9249"
    metrics.reporters: prom
    rest.flamegraph.enabled: "true"
    s3.access-key: vault:secret/data/flink-test/cheetah-flink-s3#accessKey
    s3.endpoint: vault:secret/data/flink-test/cheetah-flink-s3#endpoint
    s3.path-style-access: "true"
    s3.secret-key: vault:secret/data/flink-test/cheetah-flink-s3#secretKey
    state.backend: hashmap
    state.checkpoints.dir: s3p://flink/test-cheetah-flink-native/checkpoints
    state.savepoints.dir: s3p://flink/test-cheetah-flink-native/savepoints
    taskmanager.numberOfTaskSlots: "2"
    
  jobManager:
    replicas: 1
    resource:
      cpu: 0.1
      memory: 1Gb
  
    podTemplate:
      apiVersion: v1
      kind: Pod
      metadata:
        name: jobManager-pod-template
      spec:
        containers:
          - name: flink-main-container
            ports:
            - name: metrics
              containerPort: 9249
        
        imagePullSecrets:
          - name: pullsecret-ghcr-io
  
  taskManager:
    replicas: 
    resource:
      cpu: 0.1
      memory: 1Gb
  
    podTemplate:
      apiVersion: v1
      kind: Pod
      metadata:
        name: taskManager-pod-template
      spec:
        containers:
          - name: flink-main-container
            ports:
            - name: metrics
              containerPort: 9249
        
        imagePullSecrets:
          - name: pullsecret-ghcr-io
