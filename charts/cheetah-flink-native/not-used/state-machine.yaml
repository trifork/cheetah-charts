---
# Source: cheetah-flink-native/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
    labels:
        app.kubernetes.io/name: flink-kubernetes-operator
        app.kubernetes.io/version: 1.0.1
    name: test-cheetah-flink-native
---
# Source: cheetah-flink-native/templates/s3.yaml
apiVersion: v1
kind: Secret
metadata:
  name: test-cheetah-flink-native-s3
type: Opaque
data:
  test.yaml: czMuZW5kcG9pbnQ6IGh0dHA6Ly9taW5pby5taW5pby5zdmMuY2x1c3Rlci5sb2NhbDo5MDAw
---
# Source: cheetah-flink-native/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: flink-kubernetes-operator
    app.kubernetes.io/version: 1.0.1
  name: cheetah-flink-native-role
rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - configmaps
    verbs:
    - '*'
  - apiGroups:
    - apps
    resources:
    - deployments
    verbs:
    - '*'
---
# Source: cheetah-flink-native/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: flink-kubernetes-operator
    app.kubernetes.io/version: 1.0.1
  name: cheetah-flink-native-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cheetah-flink-native-role
subjects:
- kind: ServiceAccount
  name: test-cheetah-flink-native
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    # # If you encounter a redirect loop or are getting a 307 response code
    # # then you need to force the nginx ingress to connect to the backend using HTTPS.
    # #
    # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  name: flink-native-ingress
  namespace: flink-teste
spec:
  ingressClassName: nginx
  rules:
  - host: flink.cheetah.trifork.dev
    http:
      paths:
      - backend:
          service:
            name: test-cheetah-flink-native-rest
            port:
              number: 8081
        path: /flink-teste/test-cheetah-flink-native(/|$)(.*)
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - flink.cheetah.trifork.dev
    secretName: flink-native-tls
---
# Source: cheetah-flink-native/templates/flink-deployment.yaml
apiVersion: flink.apache.org/v1beta1
kind: FlinkDeployment
metadata:
  name: test-cheetah-flink-native
  annotations:
    vault.security.banzaicloud.io/vault-tls-secret: vault-tls
    vault.security.banzaicloud.io/vault-serviceaccount: default
spec:
  image: "ghcr.io/trifork/cheetah-example-processing:test-environment-patch"
  imagePullPolicy: Always
  serviceAccount: test-cheetah-flink-native
  flinkVersion: "v1_14"


  ingress:
    template: "flink.cheetah.trifork.dev/{{namespace}}/{{name}}(/|$)(.*)"
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: "/$2"

  job:
    jarURI: local:///opt/flink/examples/streaming/StateMachineExample.jar
    parallelism: 2
    # entryClass: 
    state: running

    upgradeMode: "savepoint"

  flinkConfiguration:
    s3.path-style-access: "true"
    state.savepoints.dir: "s3p://flink/test-cheetah-flink-native/savepoints"
    state.checkpoints.dir: "s3p://flink/test-cheetah-flink-native/checkpoints"
    state.backend: "hashmap"
    high-availability: org.apache.flink.kubernetes.highavailability.KubernetesHaServicesFactory
    high-availability.storageDir: "s3p://flink/test-cheetah-flink-native/ha"
    metrics.reporter.prom.class: "org.apache.flink.metrics.prometheus.PrometheusReporter"
    metrics.reporter.prom.port: "9249"
    metrics.reporters: "prom"
    execution.checkpointing.interval: "10 minutes"
    execution.checkpointing.min-pause: "10 minutes"
    execution.checkpointing.timeout: "5 minutes"
    rest.flamegraph.enabled: "true"
    taskmanager.numberOfTaskSlots: "2"
    s3.access-key: "vault:secret/data/flink-teste/cheetah-flink-s3#accessKey"
    s3.secret-key: "vault:secret/data/flink-teste/cheetah-flink-s3#secretKey"
    s3.endpoint: "vault:secret/data/flink-teste/cheetah-flink-s3#endpoint"
  
  jobManager:
    replicas: 1
  
    resource:
      cpu: 0.5
      memory: 1Gb
  
    podTemplate:
      apiVersion: v1
      kind: Pod
      metadata:
        name: job-manager-pod-template
      spec:
        containers:
          - name: flink-main-container
            ports:
              - containerPort: 9249
                name: metrics
            env:
              - name: S3_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: cheetah-flink-s3
                    key: accessKey
                    optional: false
              - name: S3_SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: cheetah-flink-s3
                    key: secretKey
                    optional: false
              - name: FLINK_S3_ENDPOINT
                value: http://minio.minio.svc.cluster.local:9000
            # automountServiceAccountToken: false
  
            volumeMounts:
              - name: s3-config
                mountPath: /opt/flink/conf/extra
  
        volumes:
          - name: s3-config
            secret:
              secretName: test-cheetah-flink-native-s3
              items:
                - key: test.yaml
                  path: test.yaml

  
  taskManager:
  
    resource:
      cpu: 0.5
      memory: 1Gb
  
    podTemplate:
      apiVersion: v1
      kind: Pod
      metadata:
        name: task-manager-pod-template
      spec:
        containers:
          - name: flink-main-container
            ports:
              - containerPort: 9249
                name: metrics
                protocol: TCP
            env:
              - name: AWS_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: cheetah-flink-s3
                    key: accessKey
                    optional: false
              - name: AWS_SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: cheetah-flink-s3
                    key: secretKey
                    optional: false
              - name: FLINK_S3_ENDPOINT
                value: http://minio.minio.svc.cluster.local:9000
            # automountServiceAccountToken: false
---
# Source: cheetah-flink-native/templates/podmonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: test-cheetah-flink-native
  labels:
    prometheus: cluster-metrics
spec:
  podTargetLabels:
    - component
    - cluster
  selector:
    matchLabels:
      cluster: test-cheetah-flink-native
  podMetricsEndpoints:
    - port: metrics
